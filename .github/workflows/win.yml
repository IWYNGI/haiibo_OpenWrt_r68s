name: LEDE Compilation

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y libncurses5-dev zlib1g-dev gawk git gettext wget unzip python2
          sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 gcc-multilib libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync ack autoconf automake autopoint binutils bison bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build patch pkgconf python2.7 python3 python3-pip qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev libzstd-dev ecj file java-propose-classpath python2.7-dev python3-distutils util-linux e2fsprogs dosfstools btrfs-progs

      - name: Download LEDE Source Code
        run: |
          git clone https://github.com/coolsnowwolf/lede.git
          cd lede

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Copy .config
        run: |
          cd lede
          cp ../.config .config

      - name: Download packages
        run: |
          cd lede
          make download -j16

      - name: Build LEDE Kernel Package
        run: |
          cd lede
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 .

      - name: Package OpenWrt Firmware
        uses: unifreq/openwrt_packit@master
        env:
          OPENWRT_ARMVIRT: lede/bin/targets/*/*/*rootfs.tar.gz
          PACKAGE_SOC: r68s
          KERNEL_VERSION_NAME: 5.15.95_6.1.15
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload OpenWrt Firmware to Release
        uses: ncipollo/release-action@main
        with:
          tag: openwrt_armvirt_v8_${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            This is OpenWrt firmware for Armvirt 64
            * Firmware information
            Default IP: 192.168.1.1
            Default username: root
            Default password: password
